/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.timetableitpm.subject;

import com.itpm.timetablemanagement.util.Constant;
import com.itpm.timetablemanagement.util.CreateQuery;
import com.itpm.timetablemanagement.util.DBConnection;
import java.awt.Dimension;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.xml.parsers.ParserConfigurationException;
import org.xml.sax.SAXException;

/**
 *
 * @author HASINI
 */
public class ViewSubject extends javax.swing.JFrame {

    ArrayList<Subject> subjects = new ArrayList<>();
    TableModel model;
    EditSubject editSubject = new EditSubject();
    int row ;
    int col ;
    /**
     * Creates new form ViewLecturer
     */
    public ViewSubject() {
        initComponents();
        execute();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_subject = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 255, 153));

        jPanel2.setBackground(new java.awt.Color(0, 51, 51));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 0));
        jLabel1.setText("View Subject");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(316, 316, 316)
                .addComponent(jLabel1)
                .addContainerGap(439, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tbl_subject.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Year", "Semester", "Name", "Code", "Lecturer Hr", "Tute Hr", "Lab Hr", "Eveluation Hr", "Update", "Delete"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_subject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_subjectMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_subject);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 204, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        setBounds(0, 0, 1007, 699);
    }// </editor-fold>//GEN-END:initComponents

    private void tbl_subjectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_subjectMouseClicked
       
        int row = tbl_subject.getSelectedRow();
        int col = tbl_subject.getSelectedColumn();
        model = tbl_subject.getModel();
        
        
         
        if(col == 10){
            int x = JOptionPane.showConfirmDialog(ViewSubject.this, "Are you sure to Delete", "Delete", JOptionPane.YES_NO_OPTION);
            if(x==0){
                deleteData(row);
            }
            
        }
        else if(col == 9){
            editSubject.setVisible(true);
            editSubject.setPreferredSize(new Dimension(200, 400));
            editSubject.setLocationRelativeTo(this);
            editSubject.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            
            editSubject.cmb_yr.setSelectedItem(model.getValueAt(row, 1));
            editSubject.cmb_sem.setSelectedItem(model.getValueAt(row, 2));
            editSubject.txt_name.setText(model.getValueAt(row, 3).toString());
            editSubject.txt_code.setText(model.getValueAt(row, 4).toString());
            editSubject.txt_lecHr.setText(model.getValueAt(row, 5).toString());
            editSubject.txt_tHr.setText(model.getValueAt(row, 6).toString());
            editSubject.txt_labHr.setText(model.getValueAt(row, 7).toString());
            editSubject.txt_evHr.setText(model.getValueAt(row, 8).toString());
            editSubject.txt_id.setText(model.getValueAt(row, 0).toString());
        }
    }//GEN-LAST:event_tbl_subjectMouseClicked

  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewSubject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewSubject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewSubject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewSubject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewSubject().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl_subject;
    // End of variables declaration//GEN-END:variables

    private void execute(){
        
        try{
            Connection connection =  DBConnection.getConnection();
            PreparedStatement statement = connection.prepareStatement(CreateQuery.getQuery(Constant.GET_SUBJECTS));
            ResultSet resultSet = statement.executeQuery();
            
            while(resultSet.next()){
                DefaultTableModel mod = (DefaultTableModel) tbl_subject.getModel();
                Subject sub = new Subject();
                
                sub.setId(resultSet.getInt("id"));
                sub.setSub_name(resultSet.getString("sub_name"));
                sub.setSub_code(resultSet.getString("sub_code"));
                sub.setSub_eveHr(resultSet.getString("eva_hr"));
                sub.setSub_labHr(resultSet.getString("lab_hr"));
                sub.setSub_lectHr(resultSet.getString("lec_hr"));
                sub.setSub_tuteHr(resultSet.getString("tute_hr"));
                sub.setSub_yr(resultSet.getString("off_year"));
                sub.setSub_sem(resultSet.getString("off_sem"));
                
                subjects.add(sub);
                
                mod.setRowCount(0);
                
                createTable();
            }           

        
       }catch (SQLException | ClassNotFoundException | IOException | 
                ParserConfigurationException | SAXException ex) {
            Logger.getLogger(ViewSubject.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error on data load", "Data error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void deleteData(int row){
        
        boolean error = false;
        DefaultTableModel model = (DefaultTableModel) tbl_subject.getModel();
        
       
         try {
             int id = (int) model.getValueAt(row, 0);
            
             
            Connection connection =  DBConnection.getConnection();
            PreparedStatement statement = connection.prepareStatement(CreateQuery.getQuery(Constant.DELETE_SUBJECTS));
            
            statement.setInt(1, id);
            statement.execute();
            
        } catch (SQLException | ClassNotFoundException | IOException | 
                ParserConfigurationException | SAXException ex) {
            Logger.getLogger(ViewSubject.class.getName()).log(Level.SEVERE, null, ex);
            error = true;
            
             JOptionPane.showMessageDialog(ViewSubject.this, "Delete Error", "Error", JOptionPane.ERROR_MESSAGE);
        }
         
         if(!error){
             JOptionPane.showMessageDialog(ViewSubject.this, "Delete Succes", "Succes", JOptionPane.DEFAULT_OPTION);
             model.removeRow(row);
             
             
         } 
    }

    private void createTable() {
         //To change body of generated methods, choose Tools | Templates.
         
         DefaultTableModel model = (DefaultTableModel) tbl_subject.getModel();
        
         Object [] data = new Object[11];
         
         for(int i = 0;i < subjects.size(); i++){
            data[0] = subjects.get(i).getId();
            data[1] = subjects.get(i).getSub_yr();
            data[2] = subjects.get(i).getSub_sem();
            data[3] = subjects.get(i).getSub_name();
            data[4] = subjects.get(i).getSub_code();
            data[5] = subjects.get(i).getSub_lectHr();
            data[6] = subjects.get(i).getSub_tuteHr();
            data[7] = subjects.get(i).getSub_labHr();
            data[8] = subjects.get(i).getSub_eveHr();
            data[9] = "Edit";
            data[10] = "Delete";
            
            model.addRow(data);
           
        }
    }

  
   
}
