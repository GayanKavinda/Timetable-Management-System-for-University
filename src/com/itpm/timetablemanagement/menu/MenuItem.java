/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.itpm.timetablemanagement.menu;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;

/**
 *
 * @author Batman
 */
public class MenuItem extends javax.swing.JPanel {

    /**
     * Creates new form MenuItem
     */
    private final ArrayList<MenuItem> subMenu = new ArrayList();
    private boolean menuShowing = false;
    private boolean submenuPressed = false;
    private boolean mainmenuPressed = false;
    private static MenuItem mainItem;
    private static MenuItem subItem;
    private static int opened_menu_count = 0;
    private static ArrayList<MenuItem> submenu_tracker = new ArrayList();
    private static ArrayList<MenuItem> mainmenu_tracker = new ArrayList();
    private ActionListener action = null;
    
    public MenuItem(Icon icon, String menuName, ActionListener act, MenuItem... subMenu) {
        initComponents();
        
        lbl_icon.setIcon(icon);
        lbl_name.setText(menuName);
        
        this.setSize(new Dimension(Integer.MAX_VALUE,45));
        this.setMaximumSize(new Dimension(Integer.MAX_VALUE,45));
        this.setMinimumSize(new Dimension(Integer.MAX_VALUE,45));
        
        if(act != null){
                this.action = act;
            }
        
        for(int i = 0;i < subMenu.length;i++){
            
            subMenu[i].setVisible(false);
            
            
            subMenu[i].setBackground(Color.WHITE);
            this.subMenu.add(subMenu[i]);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        lbl_icon = new javax.swing.JLabel();
        lbl_name = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 204));
        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        lbl_name.setText("Menu here...");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_icon, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_name, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_icon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(24, 24, 24)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed

        if(action != null){
            action.actionPerformed(null);
        }
        if(getSubMenu().isEmpty()){
            subItem = (MenuItem) evt.getSource();
            opened_menu_count ++;
            
            if(!submenu_tracker.contains(subItem))
            {
                for (MenuItem item : submenu_tracker) {
                    item.setBackground(Color.WHITE);
                    item.menuShowing = false;
                }
                submenu_tracker.clear();
                submenu_tracker.add(subItem);
                
            }
            
        }else{
            mainItem = (MenuItem) evt.getSource();
            
            if(!mainmenu_tracker.contains(mainItem)){
                
                for(MenuItem item : mainmenu_tracker){
                    
                    item.hideMenu();
                    item.setBackground(new Color(204, 204, 204));
                    item.menuShowing = false;
                }
                mainmenu_tracker.clear();
                mainmenu_tracker.add(mainItem);
            }
        }
        
        if(menuShowing){
            hideMenu();
            setBackground(new Color(204, 204, 204));
            menuShowing = false;
        }else{
            showMenu();
            setBackground(Color.GRAY);
            menuShowing = true;
        }
    }                                 


    private void showMenu(){
        new Thread(new Runnable() {
            @Override
            public void run() {
                for(int i = 0; i < getSubMenu().size(); i++){
                    sleep();
                    getSubMenu().get(i).setVisible(true);
                }
            }
        }).start();
    }//GEN-LAST:event_formMousePressed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseClicked

    private void hideMenu(){
        
        new Thread(new Runnable() {
            @Override
            public void run() {
                for(int i = 0; i < getSubMenu().size(); i++){
                    sleep();
                    getSubMenu().get(i).setVisible(false);
                    hilghtItem(getSubMenu().get(i));
                    getSubMenu().get(i).menuShowing = false;
                }
            }
        }).start();
    }
    
    private void hilghtItem(MenuItem item){
        
        item.setBackground(Color.WHITE);
       
    }
    private void sleep(){
        
        try{
            Thread.sleep(20);
        } catch (InterruptedException ex) {
            Logger.getLogger(MenuItem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lbl_icon;
    private javax.swing.JLabel lbl_name;
    // End of variables declaration//GEN-END:variables

    public ArrayList<MenuItem> getSubMenu() {
        return subMenu;
    }
}
